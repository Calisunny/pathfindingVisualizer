{"version":3,"sources":["Node.js","Pathfinding.js","BFS.js","DFS.js","Slider.js","Walls.js","Chosen.js","RandomMaze.js","WallFrequency.js","RecursiveDiv.js","StartAndEnd.js","AddFinish.js","SpeedText.js","App.js","serviceWorker.js","index.js"],"names":["Node","props","move","e","isStart","change","isFinish","target","className","pos","i","j","mouseDown","name","grid","fill","iswall","state","extraClass","id","this","onClick","onMouseUp","Component","Pathfinding","createNode","col","row","isVisited","distance","Infinity","previousNode","getGrid","currentrow","push","setState","addGrid","map","rowid","key","style","width","height","margin","display","padding","node","nodeid","start","finish","st","fi","fi2","finish2","BFS","visualizeBFS","order","nodesInShortestPath","cs","visitedNodesInorder","Bfs","len","length","setTimeout","newgrid","slice","newnode","fn","document","getElementById","createShortestPath","speed","v","currentNode","unshift","undefined","bool","startRow","startCol","finishRow","finishCol","c","r","unvisitedNodes","getAllNodes","sortNodesByDistance","closestNode","shift","updateNeighbours","neighbours","getNeighbours","neighbour","filter","sort","NodeA","NodeB","nodes","DFS","visualizeDFS","Dfs","stack","disp","getNeighbour","Slider","handleChange","value","provideSpeed","type","min","max","onChange","Walls","Chosen","cl","RandomMaze","createMaze","clear","console","log","wallF","Math","floor","random","WallFrequency","changeWF","wfchange","Fragment","RecursiveDiv","generateMaze","divideAndDraw","left","right","up","down","depth","horizontal","verticle","vertLine","mov","skipwalli","horiLine","skipwallj","StartAndEnd","backgroundColor","AddFinish","f2","SpeedText","App","changePos","wallfreq","wf","clearSearch","fnodes","clearBoard","addf2","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.781bfa83.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css';\r\n\r\nclass Node extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fill:props.fill,\r\n        }\r\n    }\r\n    move=(e)=>{\r\n        if(this.props.isStart){\r\n            this.props.change(\"start\");\r\n        }else if(this.props.isFinish){\r\n            this.props.change(\"finish\");\r\n        }else if(e.target.className===\"node nodeFinish2\"){\r\n            this.props.change(\"finish2\");\r\n        }else{\r\n            this.props.pos(this.props.i,this.props.j);\r\n        }\r\n    }\r\n    mouseDown=(e)=>{\r\n        var name= e.target.className;\r\n        var grid= this.props.grid;\r\n        if(this.props.fill===\"start\" ||this.props.fill===\"finish\"||this.props.fill===\"finish2\") return;\r\n        if(name===\"node nodeStart\"||name===\"node nodeFinish\"||name===\"node nodeFinish2\") return;\r\n        if(e.target.className!==\"node wall\"){ \r\n            grid[this.props.i][this.props.j].iswall=true;\r\n            e.target.className=\"node wall\"\r\n        }else if(e.target.className===\"node wall\"){\r\n            grid[this.props.i][this.props.j].iswall=false;\r\n            e.target.className=\"node\"\r\n        }\r\n    }\r\n    render(){\r\n        var extraClass=  \"\";\r\n        const id=[this.props.i,this.props.j];\r\n        if(this.props.isStart){\r\n            extraClass=\"nodeStart\";\r\n        }\r\n        if(this.props.isFinish){\r\n            extraClass=\"nodeFinish\";\r\n        }\r\n        return (\r\n            <div className={`node ${extraClass}`} onClick={this.move} id={id}\r\n            onMouseUp={this.mouseDown}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Node\r\n","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport Node from \"./Node\";\r\n\r\n\r\nclass Pathfinding extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            grid: [],\r\n        }\r\n    }\r\n    createNode=(col,row)=>{\r\n        return{\r\n            row,\r\n            col,\r\n            isVisited:false,\r\n            distance: Infinity,\r\n            iswall:false,\r\n            previousNode:null,\r\n        }\r\n    }\r\n    getGrid=()=>{\r\n        const grid=[];\r\n        for(let row=0; row<18; row++){\r\n            const currentrow=[];\r\n            for(let col=0; col<40; col++){\r\n                currentrow.push(this.createNode(col,row));\r\n            }\r\n            grid.push(currentrow);\r\n        }\r\n        return grid;\r\n    }\r\n    componentDidMount(){\r\n        const grid= this.getGrid()\r\n        this.setState({grid:grid},()=>{this.props.addGrid(grid)});\r\n    }\r\n    render() {\r\n        const {grid}= this.state;\r\n        return (\r\n            <div className=\"grid\">\r\n            {grid.map((row,rowid)=>{\r\n                return <div key={rowid} style={{width:\"160vh\", height:\"1.5wh\", margin:\"0px\",\r\n                display:\"flex\", padding:\"0px\"}} >\r\n                    {row.map((node,nodeid)=>{\r\n                        var start=false; var finish=false;\r\n                        if(this.props.start[0]===rowid && this.props.start[1]===nodeid){\r\n                            start=true;\r\n                        }\r\n                        if(this.props.finish[0]===rowid && this.props.finish[1]===nodeid){\r\n                            finish=true;\r\n                        }\r\n                        return(\r\n                            <Node key={nodeid} isStart={start} isFinish={finish} iswall={false} \r\n                            pos={this.props.pos} i={rowid} j={nodeid} change={this.props.change}\r\n                            fill={this.props.fill} grid={this.props.grid}\r\n                            st={this.props.start} fi={this.props.finish} fi2={this.props.finish2} />\r\n                        )\r\n                    }\r\n                )}\r\n                </div>\r\n            })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Pathfinding\r\n","import React, { Component } from 'react'\r\n\r\nclass BFS extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            startRow:props.start[0],\r\n            startCol:props.start[1],\r\n            finishRow: props.finish[0],\r\n            finishCol: props.finish[1],\r\n        }\r\n    }\r\n    visualizeBFS=(order,nodesInShortestPath)=>{\r\n        if(order===1)\r\n            this.props.cs(this.props.grid);\r\n        const visitedNodesInorder= this.Bfs(order);\r\n        var len= visitedNodesInorder.length;\r\n        var grid= this.props.grid;\r\n        var finish2=this.props.finish2;\r\n        for(let i=0; i<len; i++){\r\n            setTimeout(()=>{\r\n                const node= visitedNodesInorder[i];\r\n                const newgrid= this.props.grid.slice();\r\n                const newnode={\r\n                    ...node,\r\n                    isVisited:true,\r\n                }\r\n                newgrid[node.row][node.col]= newnode;\r\n                if(order===1){\r\n                    if(this.props.fn===2&&node.row===finish2[0]&&node.col===finish2[1]){\r\n                        grid[node.row][node.col].isVisited=false;\r\n                    }else{\r\n                    document.getElementById([node.row,node.col]).className=\"node nodeVisited\";\r\n                    }\r\n                }else{\r\n                    document.getElementById([node.row,node.col]).className=\"node nodeVisited2\";\r\n                }\r\n                if(i===len-1 && order===2){\r\n                    this.createShortestPath(nodesInShortestPath);\r\n                }\r\n                if(i===len-1){\r\n                    this.createShortestPath();\r\n                }\r\n            },(51-this.props.speed)*i);\r\n        }\r\n    }\r\n    createShortestPath=(v)=>{\r\n        var grid= this.props.grid;\r\n        let currentNode= grid[this.props.finish[0]][this.props.finish[1]];\r\n        const nodesInShortestPath=[];\r\n        var finish2=this.props.finish2;\r\n        if(v) currentNode= grid[finish2[0]][finish2[1]];\r\n        while(currentNode!==null){\r\n            nodesInShortestPath.unshift(currentNode);\r\n            currentNode= currentNode.previousNode;\r\n        }\r\n        if(this.props.fn===1){\r\n            for(let i=0;i<nodesInShortestPath.length;i++){\r\n                const row= nodesInShortestPath[i].row;\r\n                const col= nodesInShortestPath[i].col;\r\n                setTimeout(()=>{\r\n                    document.getElementById([row,col]).className=\"node nodePath\"\r\n                },(51-this.props.speed)*i);\r\n            }\r\n        }\r\n        if(this.props.fn===2 && grid[finish2[0]][finish2[1]].isVisited===false\r\n            && v===undefined){\r\n            var finish=this.props.finish;\r\n            var bool=false;\r\n            if(grid[finish[0]][finish[1]].isVisited) bool=true;\r\n            for(let i=0;i<grid.length;i++){\r\n                for(let j=0;j<grid[0].length;j++){\r\n                    grid[i][j].isVisited=false;\r\n                    grid[i][j].distance=Infinity;\r\n                    grid[i][j].previousNode=null;\r\n                }\r\n            }\r\n            if(bool){\r\n                this.visualizeBFS(2,nodesInShortestPath);\r\n            }\r\n        }\r\n        if(this.props.fn===2 && v&& grid[finish2[0]][finish2[1]].isVisited){\r\n            for(let i=0;i<nodesInShortestPath.length;i++){\r\n                v.push(nodesInShortestPath[i]);\r\n            }\r\n            for(let i=0;i<v.length;i++){\r\n                const row= v[i].row;\r\n                const col= v[i].col;\r\n                setTimeout(()=>{\r\n                    document.getElementById([row,col]).className=\"node nodePath\"\r\n                },(51-this.props.speed)*i);\r\n            }\r\n        }\r\n    }\r\n    Bfs=(order)=>{\r\n        const visitedNodesInorder=[];\r\n        var startRow= this.props.start[0]; var startCol= this.props.start[1];\r\n        var finishRow= this.props.finish[0]; var finishCol= this.props.finish[1];\r\n        var finish2=this.props.finish2;\r\n        if(order===2){\r\n            startRow=finishRow; startCol=finishCol;\r\n            finishRow=finish2[0]; finishCol=finish2[1];\r\n        }\r\n        const grid= this.props.grid;\r\n        const c= grid[0].length-1;\r\n        const r= grid.length-1;\r\n        grid[startRow][startCol].distance=0;\r\n        const unvisitedNodes= this.getAllNodes(grid);\r\n        while(!!unvisitedNodes.length){\r\n            this.sortNodesByDistance(unvisitedNodes);\r\n            const closestNode= unvisitedNodes.shift();\r\n            if(closestNode.iswall)continue;\r\n            if(closestNode.distance===Infinity) return visitedNodesInorder;\r\n            closestNode.isVisited=true;\r\n            visitedNodesInorder.push(closestNode);\r\n            if(closestNode===grid[finishRow][finishCol]){\r\n                return visitedNodesInorder;\r\n            }\r\n            this.updateNeighbours(closestNode,grid,c,r);\r\n        }\r\n        return visitedNodesInorder;\r\n    }\r\n    updateNeighbours=(node,grid,c,r)=>{\r\n        const neighbours= this.getNeighbours(node,grid,c,r);\r\n        for(const neighbour of neighbours){\r\n            neighbour.distance= node.distance+1;\r\n            neighbour.previousNode= node;\r\n        }\r\n    }\r\n    getNeighbours=(node,grid,c,r)=>{\r\n        const neighbours=[];\r\n        const {row,col}= node;\r\n        if(row>0)neighbours.push(grid[row-1][col]);\r\n        if(col>0)neighbours.push(grid[row][col-1]);\r\n        if(row<r)neighbours.push(grid[row+1][col]);\r\n        if(col<c)neighbours.push(grid[row][col+1]);\r\n        return neighbours.filter(neighbour=> !neighbour.isVisited);\r\n    }\r\n    sortNodesByDistance=(unvisitedNodes)=>{\r\n        unvisitedNodes.sort((NodeA,NodeB)=>NodeA.distance-NodeB.distance);\r\n    }\r\n    getAllNodes=(grid)=>{\r\n        const nodes=[];\r\n        for(var row in grid){\r\n            for(var node in grid[row]){\r\n                nodes.push(grid[row][node]);\r\n            }\r\n        }\r\n        return nodes;\r\n    }\r\n    render() {\r\n        return (\r\n            <button onClick={()=>this.visualizeBFS(1)} className=\"bfs\" >\r\n                Breadth First Search\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BFS\r\n","import React, { Component } from 'react'\r\n\r\nclass DFS extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            startRow:props.start[0],\r\n            startCol:props.start[1],\r\n            finishRow: props.finish[0],\r\n            finishCol: props.finish[1],\r\n        }\r\n    }\r\n    visualizeDFS=(order,nodesInShortestPath)=>{\r\n        if(order===1)\r\n            this.props.cs(this.props.grid);\r\n        const [visitedNodesInorder,stack]= this.Dfs(order);\r\n        var finish2= this.props.finish2;\r\n        var grid= this.props.grid;\r\n        var len= visitedNodesInorder.length;\r\n        for(let i=0; i<len; i++){\r\n            setTimeout(()=>{\r\n                const node= visitedNodesInorder[i];\r\n                const newgrid= this.props.grid.slice();\r\n                const newnode={\r\n                    ...node,\r\n                    isVisited:true,\r\n                }\r\n                newgrid[node.row][node.col]= newnode;\r\n                if(order===1){\r\n                    if(this.props.fn===2&&node.row===finish2[0]&&node.col===finish2[1]){\r\n                        grid[node.row][node.col].isVisited=false;\r\n                    }else{\r\n                        document.getElementById([node.row,node.col]).className=\"node nodeVisited\";\r\n                    }\r\n                }else if(order===2){\r\n                    document.getElementById([node.row,node.col]).className=\"node nodeVisited2\";\r\n                }\r\n                if(i===len-1 && order===2){\r\n                    this.createShortestPath(stack,nodesInShortestPath);\r\n                }\r\n                if(i===len-1){\r\n                    this.createShortestPath(stack);\r\n                }\r\n            },(51-this.props.speed)*i);\r\n        }\r\n    }\r\n    createShortestPath=(nodesInShortestPath,v)=>{\r\n        var grid= this.props.grid;\r\n        var finish= this.props.finish;\r\n        var finish2=this.props.finish2;\r\n        if(this.props.fn===1){\r\n            var disp=[];\r\n            for(let i=nodesInShortestPath.length-1;i>=0;i--){\r\n                disp.push(nodesInShortestPath[i])\r\n            }\r\n            for(let i=0;i<disp.length;i++){\r\n                const row= disp[i].row;\r\n                const col= disp[i].col;\r\n                setTimeout(()=>{\r\n                    document.getElementById([row,col]).className=\"node nodePath\"\r\n                },(51-this.props.speed)*i);\r\n            }\r\n        }\r\n        if(this.props.fn===2 && grid[finish2[0]][finish2[1]].isVisited===false\r\n         && v===undefined){\r\n            var bool=false;\r\n            if(grid[finish[0]][finish[1]].isVisited) bool=true;\r\n            for(let i=0;i<grid.length;i++){\r\n                for(let j=0;j<grid[0].length;j++){\r\n                    grid[i][j].isVisited=false;\r\n                    grid[i][j].distance=Infinity;\r\n                    grid[i][j].previousNode=null;\r\n                }\r\n            }\r\n            if(bool){\r\n                this.visualizeDFS(2,nodesInShortestPath);\r\n            }\r\n        }\r\n        if(this.props.fn===2 && grid[finish2[0]][finish2[1]].isVisited && v){\r\n            var display=[]\r\n            for(let i=v.length-1;i>=0;i--){\r\n                display.push(v[i]);\r\n            }\r\n            for(let i=nodesInShortestPath.length-1;i>=0;i--){\r\n                display.push(nodesInShortestPath[i]);\r\n            }\r\n            for(let i=display.length-1;i>=0;i--){\r\n                const row= display[i].row;\r\n                const col= display[i].col;\r\n                setTimeout(()=>{\r\n                    document.getElementById([row,col]).className=\"node nodePath\"\r\n                },(51-this.props.speed)*i);\r\n            }\r\n        }\r\n    }\r\n    Dfs=(order)=>{\r\n        const visitedNodesInorder=[];\r\n        const stack=[];\r\n        var neighbour=\"\";\r\n        var startRow= this.props.start[0]; var startCol= this.props.start[1];\r\n        var finishRow= this.props.finish[0]; var finishCol= this.props.finish[1];\r\n        var finish2= this.props.finish2;\r\n        if(order===2){\r\n            startRow=finishRow; startCol=finishCol;\r\n            finishRow=finish2[0]; finishCol=finish2[1];\r\n        }\r\n        const grid= this.props.grid;\r\n        const c= grid[0].length-1;\r\n        const r= grid.length-1;\r\n        stack.push(grid[startRow][startCol]);\r\n        visitedNodesInorder.push(grid[startRow][startCol]);\r\n        grid[startRow][startCol].isVisited=true;\r\n        while(stack.length!==0){\r\n            const currentNode= stack[0];\r\n            neighbour= this.getNeighbour(currentNode,grid,c,r);\r\n            if(neighbour!==null){\r\n                neighbour.isVisited=true;\r\n                visitedNodesInorder.push(neighbour);\r\n                stack.unshift(neighbour);\r\n            }\r\n            if(neighbour!==null && neighbour.row===finishRow && neighbour.col===finishCol){\r\n                return [visitedNodesInorder,stack];\r\n            }\r\n            if(neighbour===null){\r\n                stack.shift();\r\n            }\r\n        }\r\n        return [visitedNodesInorder,stack];\r\n    }\r\n    getNeighbour=(node,grid,c,r)=>{\r\n        const {row,col}= node;\r\n        if(col<c && grid[row][col+1].isVisited===false && grid[row][col+1].iswall===false){ \r\n            return grid[row][col+1];\r\n        }else if(row<r && grid[row+1][col].isVisited===false && grid[row+1][col].iswall===false){\r\n            return grid[row+1][col];\r\n        }else if(col>0 && grid[row][col-1].isVisited===false && grid[row][col-1].iswall===false){\r\n            return grid[row][col-1];\r\n        }else if(row>0 && grid[row-1][col].isVisited===false && grid[row-1][col].iswall===false){\r\n            return grid[row-1][col];\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <button onClick={()=>this.visualizeDFS(1)} className=\"dfs\" >\r\n                Depth First Search\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DFS\r\n","import React, { Component } from 'react'\r\n\r\nclass Slider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             speed: 30\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({speed: e.target.value},\r\n            ()=>{this.props.provideSpeed(this.state.speed)});\r\n    }\r\n    render() {\r\n        return (\r\n             <div >\r\n                <input type=\"Range\" min={1} max={40} value={this.state.speed}\r\n                onChange={this.handleChange} className=\"slider\"/>\r\n            </div>\r\n            )\r\n        }\r\n}\r\n\r\nexport default Slider\r\n","import React, { Component } from 'react'\r\n\r\nclass Walls extends Component {\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n          \r\n    }\r\n}\r\n\r\n    render() {\r\n        return (<button onClick={()=>this.props.change(\"wall\")} className=\"wallButton\" >\r\n            Select Walls\r\n        </button>)\r\n    }\r\n}\r\n\r\nexport default Walls\r\n","import React from 'react'\r\n\r\nconst Chosen = (props) => {\r\nvar cl=\"\"\r\n    if(props.fill===\"wall\"){\r\n        cl=\"wall\"\r\n    }else if(props.fill===\"start\"){\r\n        cl=\"nodeStart\"\r\n    }else if(props.fill===\"finish\"){\r\n        cl=\"nodeFinish\"\r\n    }else if(props.fill===\"finish2\"){\r\n        cl=\"nodeFinish2\"\r\n    }\r\n    return (\r\n        <div className=\"selectedNode\">\r\n            Selected Node<div className={`node ${cl} shift`}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chosen\r\n","import React, { Component } from 'react'\r\n\r\nclass RandomMaze extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    createMaze=()=>{\r\n        this.props.clear();\r\n        var grid=this.props.grid\r\n        for(let i=0;i<18;i++){\r\n            console.log(\"row \"+i);\r\n            for(let j=1;j<=this.props.wallF;j++){\r\n                var col=(Math.floor(Math.random()*40));\r\n                if((i===this.props.start[0] && col=== this.props.start[1])||\r\n                    (i===this.props.finish[0] && col=== this.props.finish[1])||\r\n                    (i===this.props.finish2[0] && col=== this.props.finish2[1])){\r\n                        console.log(i+\",\"+j)\r\n                        continue;\r\n                }\r\n                grid[i][col].iswall=true;\r\n                console.log(grid[i][col]);\r\n                document.getElementById([i,col]).className=`node wall`\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <button onClick={this.createMaze} className=\"RandomMaze\" >\r\n                Create Random Maze\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomMaze\r\n","import React, { Component } from 'react'\r\n\r\nclass WallFrequency extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    changeWF=(e)=>{\r\n        this.props.wfchange(e.target.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"wftext\">Wall Frequency</div>\r\n            <select id=\"size\" className=\"selector\"\r\n             value={this.props.wallF} onChange={this.changeWF}>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n                <option value=\"9\">9</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"11\">11</option>\r\n                <option value=\"12\">12</option>\r\n                <option value=\"13\">13</option>\r\n                <option value=\"14\">14</option>\r\n                <option value=\"15\">15</option>\r\n            </select>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WallFrequency\r\n","import React, { Component } from 'react'\r\n\r\nclass RecursiveDiv extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    generateMaze=(grid,st,fi,fi2)=>{\r\n        this.props.clear();\r\n        var fn= this.props.fn;\r\n        for(let i=0;i<grid.length;i++){\r\n            for(let j=0;j<grid[0].length;j++){\r\n                if(i===0||j===0||i===grid.length-1||j===grid[0].length-1){\r\n                    grid[i][j].iswall=true;\r\n                    document.getElementById([i,j]).className=`node wall`\r\n                }\r\n            }\r\n        }\r\n        this.divideAndDraw(grid,1,grid[0].length-2,1,grid.length-2,0);\r\n        grid[st[0]][st[1]].iswall=false; grid[fi[0]][fi[1]].iswall=false;\r\n        if(fn===2) grid[fi2[0]][fi2[1]].iswall=false;\r\n        document.getElementById([st[0],st[1]]).className=`node nodeStart`;\r\n        document.getElementById([fi[0],fi[1]]).className=`node nodeFinish`;\r\n        if(fn===2)\r\n        document.getElementById([fi2[0],fi2[1]]).className=`node nodeFinish2`;\r\n    }\r\n    divideAndDraw=(grid,left,right,up,down,depth)=>{\r\n        var horizontal=right-left;\r\n        var verticle=down-up;\r\n        if(horizontal>verticle){\r\n            if(verticle+1<2) return;\r\n            var vertLine=Math.floor(Math.random()*(horizontal-1)+left+1);\r\n            if(grid[up-1][vertLine].iswall===false||grid[down+1][vertLine].iswall===false){\r\n                for(let mov=left+1;mov<right;mov++){\r\n                    if(grid[up-1][mov].iswall===true&&grid[down+1][mov].iswall===true){\r\n                        vertLine=mov;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(grid[up-1][vertLine].iswall===false||grid[down+1][vertLine].iswall===false){\r\n                return;\r\n            }\r\n            var skipwalli=Math.floor(Math.random()*(verticle)+up);\r\n            for(let i=up;i<=down;i++){\r\n                if(i===skipwalli) continue;\r\n                grid[i][vertLine].iswall=true;\r\n                document.getElementById([i,vertLine]).className=`node wall`\r\n            }\r\n            this.divideAndDraw(grid,left,vertLine-1,up,down,depth+1);\r\n            this.divideAndDraw(grid,vertLine+1,right,up,down,depth+1);\r\n        }else{\r\n            if(horizontal+1<2) return;\r\n            var horiLine=Math.floor(Math.random()*(verticle-1)+up+1);\r\n            if(grid[horiLine][left-1].iswall===false||grid[horiLine][right+1].iswall===false){\r\n                for(let mov=up+1;mov<down;mov++){\r\n                    if(grid[mov][left-1].iswall===true&&grid[mov][right+1].iswall===true){\r\n                        horiLine=mov;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(grid[horiLine][left-1].iswall===false||grid[horiLine][right+1].iswall===false){\r\n                return;\r\n            }\r\n            var skipwallj=Math.floor(Math.random()*(horizontal)+left);\r\n            for(let j=left;j<=right;j++){\r\n                if(j===skipwallj) continue;\r\n                grid[horiLine][j].iswall=true;\r\n                document.getElementById([horiLine,j]).className=`node wall`\r\n            }\r\n            this.divideAndDraw(grid,left,right,up,horiLine-1,depth+1);\r\n            this.divideAndDraw(grid,left,right,horiLine+1,down,depth+1);\r\n        }\r\n    }\r\n    render() {\r\n        var grid= this.props.grid;\r\n        var st= this.props.start; var fi= this.props.finish; var fi2= this.props.finish2;\r\n        return (\r\n            <button onClick={()=>this.generateMaze(grid,st,fi,fi2)} className=\"recursiveDiv\">\r\n                Recursive Division Maze\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecursiveDiv\r\n","import React from 'react'\r\n\r\nconst StartAndEnd = () => {\r\n    return (\r\n        <div className=\"startendnode\">\r\n            <div style={{display:\"flex\", height:\"5vh\"}}>\r\n                Start node : <div style={{height:\"4vh\", width:\"4vh\", backgroundColor:\"green\"}} ></div>\r\n            </div>\r\n            <div style={{display:\"flex\", height:\"5vh\"}}>\r\n                Finish node : <div style={{height:\"4vh\", width:\"4vh\", backgroundColor:\"red\"}} ></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartAndEnd\r\n","import React, { Component } from 'react'\r\n\r\nclass AddFinish extends Component {\r\n    render() {\r\n        return (\r\n            <button className=\"addfinish\" onClick={()=>{this.props.f2()}}>\r\n                Another Finish Node\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFinish\r\n","import React from 'react';\r\n\r\nexport const SpeedText = (props) => {\r\n    return (\r\n        <div className= \"speed\">\r\n            Speed : {props.speed}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpeedText\r\n","\nimport './App.css';\nimport React, { Component } from 'react';\nimport Pathfinding from './Pathfinding';\nimport BFS from './BFS';\nimport DFS from './DFS';\nimport Slider from './Slider'\nimport Walls from './Walls';\nimport Chosen from './Chosen'\nimport RandomMaze from './RandomMaze';\nimport WallFrequency from './WallFrequency';\nimport RecursiveDiv from './RecursiveDiv';\nimport StartAndEnd from './StartAndEnd';\nimport AddFinish from './AddFinish';\nimport SpeedText from './SpeedText';\n\n class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      start:[8,9],\n      finish:[8,20],\n      finish2:[5,14],\n      change:\"wall\",\n      grid:[],\n      speed:30,\n      wallF:12,\n      fnodes:1\n    }\n  }\n  change=(c)=>{\n    this.setState({change:c})\n  }\n  changePos=(i,j)=>{\n    var finish2= this.state.finish2;\n    var c=this.state.change;\n    if(c===\"wall\")return\n    var grid= this.state.grid;\n    grid[i][j].iswall=false;\n    if(c===\"finish2\"){\n      document.getElementById([finish2[0],finish2[1]]).className=`node`;\n      document.getElementById([i,j]).className=`node nodeFinish2`\n    }\n    this.setState({[c]:[i,j]});\n  }\n  addGrid=(grid)=>{\n    this.setState({grid:grid})\n  }\n  provideSpeed=(speed)=>{\n    this.setState({speed:speed})\n  }\n  wallfreq=(wf)=>{\n    this.setState({wallF:wf});\n  }\n  clearSearch=(grid)=>{\n    for(let i=0;i<18;i++){\n      for(let j=0;j<40;j++){\n        grid[i][j].isVisited=false;\n        grid[i][j].distance=Infinity;\n        grid[i][j].previousNode=null;\n        if(i===this.state.start[0] && j=== this.state.start[1]){\n          document.getElementById([i,j]).className=`node nodeStart`;\n        }else if(i===this.state.finish[0] && j=== this.state.finish[1]){\n          document.getElementById([i,j]).className=`node nodeFinish`;\n        }else if(i===this.state.finish2[0] && j=== this.state.finish2[1]\n          && this.state.fnodes===2){\n          document.getElementById([i,j]).className=`node nodeFinish2`;\n        }else if(!grid[i][j].iswall){\n          document.getElementById([i,j]).className=`node`\n        }\n      }\n    }\n  }\n  clearBoard=()=>{\n    var grid= this.state.grid;\n    for(let i=0;i<18;i++){\n      for(let j=0;j<40;j++){\n        grid[i][j].iswall=false;\n        grid[i][j].isVisited=false;\n        grid[i][j].previousNode=null;\n        grid[i][j].distance=Infinity;\n        if(i===this.state.start[0] && j=== this.state.start[1]){\n          document.getElementById([i,j]).className=`node nodeStart`;\n          continue;\n        }else if(i===this.state.finish[0] && j=== this.state.finish[1]){\n          document.getElementById([i,j]).className=`node nodeFinish`;\n          continue;\n        }else if(i===this.state.finish2[0] && j=== this.state.finish2[1]\n           && this.state.fnodes===2){\n          document.getElementById([i,j]).className=`node nodeFinish2`;\n          continue;\n        }\n        document.getElementById([i,j]).className=`node`\n      }\n    }\n  }\n  addf2=()=>{\n    var finish2= this.state.finish2;\n    var grid= this.state.grid;\n    var node= document.getElementById([finish2[0],finish2[1]]);\n    if(node.className===`node nodeFinish2`){\n      node.className=`node`;\n      this.setState({fnodes:1});\n    }else{\n      grid[finish2[0]][finish2[1]].iswall=false;\n      node.className=`node nodeFinish2`\n      this.setState({fnodes:2});\n    }\n  }\n  render() {\n    var st=this.state.start; var fi=this.state.finish; var fi2=this.state.finish2;\n    const grid= this.state.grid;\n    return (\n      <div className=\"App\">\n        <div className=\"topbar\">\n          <Slider provideSpeed={this.provideSpeed}/>\n          <SpeedText speed= {this.state.speed}/>\n          <Chosen fill={this.state.change}/>\n          <StartAndEnd/>\n          <AddFinish f2={this.addf2}/>\n          <WallFrequency wallF={this.state.wallF} wfchange={this.wallfreq}/>\n          <Walls change={this.change}/>\n          <BFS start={st} finish={fi} grid={grid} fn={this.state.fnodes}\n           finish2={fi2} speed={this.state.speed} cs={this.clearSearch}/>\n          <DFS start={st} finish={fi} grid={grid} fn={this.state.fnodes}\n           finish2={fi2} speed={this.state.speed} cs={this.clearSearch}/>\n          <button className=\"clearboard\" onClick={()=>this.clearBoard()} >Clear Board</button>\n          <button className=\"clearSearch\" onClick={()=>this.clearSearch(grid)} >Clear Search</button>\n          <RecursiveDiv start={st} finish={fi} finish2={fi2} grid={grid} clear={this.clearBoard}\n           fn={this.state.fnodes}/>\n          <RandomMaze start={st} finish={fi} grid={grid} finish2={fi2}\n           clear={this.clearBoard} wallF={this.state.wallF}/>\n        </div>\n        <Pathfinding start={st} finish={fi} addGrid={this.addGrid} finish2={fi2}\n         pos={this.changePos} change={this.change} fill={this.state.change} grid={this.state.grid}/>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}